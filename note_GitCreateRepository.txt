{
     Git init - создаст скрытую папку .Git (в которую добавит все файлы проекта)
git config --global user.name "korsakov_ua_dn"
git config --global user.email korsakov_ua_dn@gmail.com
(возможен вариант local только для конкретной папки) 
} - первое состояние Git - файлы созданы выделены красным цветом, с ними ни чего не происходит.


{
    git add -A (перенести файлы в индекс)
    git add main.css
    git add *.css
} - второе состояние Git - git следит за файлами, выделены зеленым цветом

{
    git commit -a -m"развернутый коментарий что изменилось"
}

Повторный commit - 
    git add -A
    git commit -a -m"второй коментарий что изменилось"

Просмотреть логи какие commit были и коментарий
    git log

Создаем новый репозиторий на github
добавляем удаленный репозиторий, называем его origin, указываем url к нему -
    git remote add origin https://github.com/Korsakov-ua-dn/JavaScript_Git_Test.git
теперь на локальный репозиторий связан с удаленным
Пушим все фалы на удаленный репозиторий
    git push -u origin master
Обновить страничку на github убедиться что все файлы перенесены

Повторное добавление изменений на удаленный репозиторий
    git add -A (перенести файлы в индекс)
    git commit -a -m"развернутый коментарий что изменилось"
    git push
        т.к. ранее был добавлен ключ -u origin master,
         теперь автоматически файлы добавяться в нужную папку

Как работать с этим же репозиторием с другого пк -
    в рабочей папке запускаем терминал
    git clone https://github.com/Korsakov-ua-dn/JavaScript_Git_Test.git WorkTest
        (ссылку можно скопировать на GitHub, название паки указывать не обязательно)
        потребуется заново запустить VS cod и открыть рабочую папку
    после завершения работы
    git add -A
    git commit -a -m"развернутый коментарий что изменилось"
    git push
        Когда клонируеш какой то репозиторий то автоматически будет связан с удаленным.

Когда начинаеш работать над совместным проектом первым делом
    git pull
        получить все изменения с удаленного репозитория

Если не push атся изменения на удаленный репозиторий
 из-за того что ты работал не с актуальной версией
    git pull
        произойдет Merge branch слияние двух версий 
        необходимо написать сообщения своего commit
        ctrl + С
        ctrl + С 
        :wq!
    git status проверить статус на отсутствие измененных файлов
    git push всех файлов после слияния





